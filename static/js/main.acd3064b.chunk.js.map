{"version":3,"sources":["utils/fetchClient.ts","types/FilterType.ts","api/todos.ts","api/users.ts","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","components/TodoList/TodoList.tsx","components/Footer/Footer.tsx","App.tsx","components/Error/ErrorNotification.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","FilterType","client","createTodo","userId","query","title","completed","deleteTodo","todoId","updateTodo","object","getUserByEmail","email","a","users","createUser","name","AuthForm","onLogin","useState","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","localStorage","setItem","useEffect","userData","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","onSubmit","className","htmlFor","classNames","type","id","placeholder","disabled","value","required","onChange","e","target","minLength","AuthContext","React","createContext","AuthProvider","children","setUser","Provider","TodoList","todo","removeTodo","changeTodo","isLoading","setIsLoading","selectedIds","toggle","setToggle","setQuery","actionOnEdit","todoTitle","data-cy","onKeyDown","key","onBlur","onDoubleClick","onClick","includes","Footer","setFilter","filter","todos","completedTodos","currentTodos","length","href","ALL","ACTIVE","COMPLETED","forEach","ErrorNotification","setError","aria-label","App","useContext","newTodoField","useRef","setTodos","errorType","setErrorType","setSelectedIds","errorTimeOut","addTodo","trim","newTodo","prevState","useCallback","prev","x","updetedTodo","map","prevItem","toggleAll","idsToComplete","all","getTodosFromServer","todosFromServer","current","focus","filteredTodos","useMemo","every","ref","TransitionGroup","CSSTransition","timeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acd3064b.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","// eslint-disable-next-line no-shadow\nexport enum FilterType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number | undefined) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const createTodo = (\n  userId: number | undefined, query: string,\n) => {\n  return client.post<Todo>(`/todos?userId=${userId}`, {\n    title: query,\n    completed: false,\n    userId,\n  });\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n\nexport const updateTodo = (todoId: number, object: any): Promise<Todo> => {\n  return client.patch(`/todos/${todoId}`, object);\n};\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      throw new Error('Try to login again.');\n    }\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div\n          className={classNames('control has-icons-left', {\n            'is-loading': loading,\n          })}\n        >\n          <input\n            type=\"email\"\n            id=\"user-email\"\n            className={classNames('input', {\n              'is-danger': !needToRegister && errorMessage,\n            })}\n            placeholder=\"Enter your email\"\n            disabled={loading || needToRegister}\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-name\">\n            Your Name\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"text\"\n              id=\"user-name\"\n              className={classNames('input', {\n                'is-danger': needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your name\"\n              required\n              minLength={4}\n              disabled={loading}\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n          </div>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types/User';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoCompleted } from '../../types/TodoCompleted';\nimport { TodoTitle } from '../../types/TodoTitle';\n\ntype Props = {\n  isLoading: boolean\n  setIsLoading: (value: boolean) => void\n  todo: Todo\n  selectedIds: number[]\n  removeTodo: (todoId: number) => void\n  changeTodo: (todoId: number, object: TodoCompleted | TodoTitle) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todo,\n  removeTodo,\n  changeTodo,\n  isLoading,\n  setIsLoading,\n  selectedIds,\n}) => {\n  const [toggle, setToggle] = useState(false);\n  const [query, setQuery] = useState(todo.title);\n\n  const actionOnEdit = (\n    todoTitle: string, value: Todo,\n  ) => {\n    if (query !== '' && query !== todoTitle) {\n      setIsLoading(true);\n      changeTodo(value.id, { title: query });\n      setToggle(false);\n    }\n\n    if (query === '') {\n      removeTodo(value.id);\n    }\n\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  };\n\n  const actionOnEscape = (event: React.KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      setToggle(false);\n      setQuery(todo.title);\n    }\n  };\n\n  return (\n    <div\n      data-cy=\"Todo\"\n      className={classNames('todo', {\n        'todo completed': todo.completed,\n      })}\n      key={todo.id}\n    >\n      <label className=\"todo__status-label\">\n        <input\n          data-cy=\"TodoStatus\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          onChange={() => {\n            changeTodo(todo.id, { completed: !todo.completed });\n          }}\n        />\n      </label>\n\n      {toggle ? (\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            actionOnEdit(todo.title, todo);\n          }}\n        >\n          <input\n            type=\"text\"\n            value={query}\n            className=\"todo__title-field\"\n            onChange={(event) => {\n              setQuery(event.target.value);\n            }}\n            onKeyDown={actionOnEscape}\n            onBlur={() => {\n              actionOnEdit(todo.title, todo);\n            }}\n          />\n        </form>\n      ) : (\n        <>\n          <span\n            data-cy=\"TodoTitle\"\n            className=\"todo__title\"\n            onDoubleClick={() => {\n              setToggle(true);\n            }}\n          >\n            {query}\n          </span>\n          <button\n            type=\"button\"\n            className=\"todo__remove\"\n            data-cy=\"TodoDeleteButton\"\n            onClick={() => {\n              removeTodo(todo.id);\n            }}\n          >\n            ×\n          </button>\n        </>\n      )}\n      {isLoading && (selectedIds.includes(todo.id)) && (\n        <div data-cy=\"TodoLoader\" className=\"modal overlay is-active\">\n          <div className=\"modal-background has-background-white-ter\" />\n          <div className=\"loader\" />\n        </div>\n      )}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { FilterType } from '../../types/FilterType';\n\ntype Props = {\n  setFilter: (value: FilterType) => void\n  filter: FilterType\n  todos: Todo[]\n  removeTodo: (todoId: number) => void\n};\n\nexport const Footer: React.FC<Props> = ({\n  setFilter,\n  filter,\n  todos,\n  removeTodo,\n}) => {\n  const completedTodos = todos.filter(todo => todo.completed);\n  const currentTodos = todos.length - completedTodos.length;\n\n  const removeCompletedTodos = () => {\n    todos.forEach(todo => {\n      if (todo.completed) {\n        removeTodo(todo.id);\n      }\n    });\n  };\n\n  return (\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${currentTodos} items left`}\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        <a\n          data-cy=\"FilterLinkAll\"\n          href=\"#/\"\n          className={classNames('filter__link', {\n            'filter__link selected': filter === FilterType.ALL,\n          })}\n          onClick={() => {\n            setFilter(FilterType.ALL);\n          }}\n        >\n          All\n        </a>\n\n        <a\n          data-cy=\"FilterLinkActive\"\n          href=\"#/active\"\n          className={classNames('filter__link', {\n            'filter__link selected': filter === FilterType.ACTIVE,\n          })}\n          onClick={() => {\n            setFilter(FilterType.ACTIVE);\n          }}\n        >\n          Active\n        </a>\n\n        <a\n          data-cy=\"FilterLinkCompleted\"\n          href=\"#/completed\"\n          className={classNames('filter__link', {\n            'filter__link selected': filter === FilterType.COMPLETED,\n          })}\n          onClick={() => {\n            setFilter(FilterType.COMPLETED);\n          }}\n        >\n          Completed\n        </a>\n      </nav>\n\n      <button\n        data-cy=\"ClearCompletedButton\"\n        type=\"button\"\n        className={classNames('todoapp__clear-completed', {\n          'has-text-white': !completedTodos.length,\n        })}\n        onClick={removeCompletedTodos}\n        disabled={!completedTodos.length}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  CSSTransition,\n  TransitionGroup,\n} from 'react-transition-group';\n\nimport classNames from 'classnames';\nimport {\n  createTodo,\n  getTodos,\n  deleteTodo,\n  updateTodo,\n} from './api/todos';\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Footer } from './components/Footer/Footer';\nimport { Todo } from './types/Todo';\nimport { ErrorNotification } from './components/Error/ErrorNotification';\nimport { TodoCompleted } from './types/TodoCompleted';\nimport { TodoTitle } from './types/TodoTitle';\n\n// eslint-disable-next-line no-shadow\nenum FilterType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const user = useContext(AuthContext);\n  const newTodoField = useRef<HTMLInputElement>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState<FilterType>(FilterType.ALL);\n  const [errorType, setErrorType] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedIds, setSelectedIds] = useState<number[]>([]);\n\n  const errorTimeOut = () => {\n    setTimeout(() => {\n      setErrorType('');\n    }, 3000);\n  };\n\n  const addTodo = async () => {\n    if (!query.trim()) {\n      setErrorType('Title can\\'t be empty');\n      errorTimeOut();\n\n      return;\n    }\n\n    try {\n      const newTodo = await createTodo(user?.id, query);\n\n      setTodos((prevState) => {\n        return [...prevState, newTodo];\n      });\n    } catch (error) {\n      setErrorType('Unable to add a todo');\n      errorTimeOut();\n    }\n  };\n\n  const removeTodo = useCallback(async (todoId: number) => {\n    try {\n      await deleteTodo(todoId);\n      setTodos(prev => prev.filter((x) => x.id !== todoId));\n    } catch (error) {\n      setErrorType('Unable to delete a todo');\n      errorTimeOut();\n    }\n  }, []);\n\n  const changeTodo = useCallback(async (\n    todoId: number, object: TodoCompleted | TodoTitle,\n  ) => {\n    setSelectedIds([todoId]);\n    try {\n      const updetedTodo: Todo = await updateTodo(todoId, object);\n\n      setTodos(prev => (prev.map((prevItem) => (prevItem.id === todoId\n        ? updetedTodo\n        : prevItem))\n      ));\n    } catch (error) {\n      setErrorType('Unable to update a todo');\n      errorTimeOut();\n    }\n  }, []);\n\n  const toggleAll = async () => {\n    try {\n      const idsToComplete = todos\n        .filter(todo => !todo.completed)\n        .map(todo => todo.id);\n\n      setSelectedIds(idsToComplete);\n\n      if (idsToComplete.length === 0) {\n        setSelectedIds(todos.map(todo => todo.id));\n\n        await Promise.all(todos\n          .map(todo => changeTodo(todo.id, { completed: false })));\n      } else {\n        await Promise.all(todos.map(todo => {\n          return !todo.completed\n            ? changeTodo(todo.id, { completed: true }) : null;\n        }));\n      }\n\n      setSelectedIds([]);\n    } catch (error) {\n      setErrorType('Unable to update a todo');\n    }\n  };\n\n  const getTodosFromServer = async () => {\n    try {\n      if (user) {\n        const todosFromServer = await getTodos(user.id);\n\n        setTodos(todosFromServer);\n      }\n    } catch (error) {\n      setErrorType('Unable to load todos');\n      errorTimeOut();\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    switch (filter) {\n      case FilterType.ACTIVE:\n        return todos.filter(todo => !todo.completed);\n      case FilterType.COMPLETED:\n        return todos.filter(todo => todo.completed);\n      default:\n        return [...todos];\n    }\n  }, [todos, filter]);\n\n  const handleSubmit = (event: React.FormEvent<EventTarget>) => {\n    event.preventDefault();\n\n    addTodo();\n    setQuery('');\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <header className=\"todoapp__header\">\n          {todos.length > 0 && (\n            <button\n              data-cy=\"ToggleAllButton\"\n              aria-label=\"ToggleAllButton\"\n              type=\"button\"\n              className={classNames(\n                'todoapp__toggle-all',\n                {\n                  'todoapp__toggle-all active':\n                    todos.every(todo => todo.completed),\n                },\n              )}\n              onClick={toggleAll}\n            />\n          )}\n\n          <form onSubmit={handleSubmit}>\n            <input\n              data-cy=\"NewTodoField\"\n              type=\"text\"\n              ref={newTodoField}\n              className=\"todoapp__new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n              }}\n            />\n          </form>\n        </header>\n\n        <section className=\"todoapp__main\" data-cy=\"TodoList\">\n          <TransitionGroup>\n            {filteredTodos.map(todo => (\n              <CSSTransition\n                key={todo.id}\n                timeout={300}\n                classNames=\"item\"\n              >\n                <TodoList\n                  todo={todo}\n                  removeTodo={removeTodo}\n                  changeTodo={changeTodo}\n                  isLoading={isLoading}\n                  setIsLoading={setIsLoading}\n                  selectedIds={selectedIds}\n                />\n\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n        </section>\n\n        {todos.length > 0 && (\n          <Footer\n            setFilter={setFilter}\n            filter={filter}\n            todos={todos}\n            removeTodo={removeTodo}\n          />\n        )}\n      </div>\n\n      {errorType && (\n        <ErrorNotification error={errorType} setError={setErrorType} />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  error: string\n  setError: (error: string) => void\n};\n\nexport const ErrorNotification: React.FC<Props> = ({ error, setError }) => {\n  return (\n    <div\n      data-cy=\"ErrorNotification\"\n      className=\"notification is-danger is-light has-text-weight-normal\"\n    >\n      <button\n        data-cy=\"HideErrorButton\"\n        aria-label=\"HideErrorButton\"\n        type=\"button\"\n        className=\"delete\"\n        onClick={() => setError('')}\n      />\n      {error}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\nimport { AuthProvider } from './components/Auth/AuthContext';\n\nReactDOM.render(\n  <AuthProvider>\n    <App />\n  </AuthProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}